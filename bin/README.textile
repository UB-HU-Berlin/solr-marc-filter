h1. ./bin/

h2. ./buildIndex.sh

Auführbares Bash-Skript, was alle bis dahin erstellten Solr Indizes mit Daten der Cores füllt. Bereits bestehende Solr Indexe können damit überschrieben (bzw. erweitert) werden!

bc. $ ./buildIndex.sh

h2. ./createCore.sh

Ausführbares Bash-Skript, was einen neuen leeren Solr-Core erstellt. Die entsprechenden Dateien werden automatisch generiert und die Konfiguration für die Solr-Cores durch die Anweisungsroutine aktualisiert. Es kann ausgewählt werden ob die Initialdaten als XML- oder Marc-Format vorliegen.

bc. $ ./createCore.sh nameOfNewCore

* *newCoreName* Name eines neuen Verbundes, der als Core hinzugefügt werden soll

h2. ./removeCore.sh

Auführbares Bash-Skript, einen vorhandenen Solr-Core löscht. Es werden alle indizierten Daten, sowie initialen Daten und Updates und sonstigen Konfigurationseinträge für den entsprechenden Core gelöscht! Sollte nur ausgeführt werden, wenn absolut notwendig.

bc. $ ./removeCore.sh nameOfCoreToRemove

* *coreName* Name eines neuen Verbundes, der als Core hinzugefügt werden soll


h2. ./getResults.sh

Auführbares Bash-Skript, was parameterlos ein Perl Skript startet und die im Ordner ../etc/solrQuery.ini befindlichen Filter anwendet.

bc. $ ./getResults.sh 


h2. ./removeUpdates.sh

Auführbares Bash-Skript, was parameterlos aufgerufen wird und alle Updates der Verbünde löscht, da Updates auf Dauer nicht gespeichert werden sollen und die Änderungen i.d.R. im Solr-Index bereits angepasst sind.

bc. $ ./removeUpdates.sh 


h2. ./runUpdates.sh

Auführbares Bash-Skript, was parameterlos aufgerufen wird und nach Updates für die jeweilien Cores an den verschiedenen Schnittstellen sucht. Das Skript selbst sollte nicht händisch gerufen werden, sondern durch einen Cron-Job jeweils stündlich/täglich automatisch aufgerufen werden.

h2. ./startSshAgent.sh

Ausführbares Bash-Skript, was parameterlos gerufen wird und dazu dient, den ssh-agent zu starten, sodass bei erstmaligem Aufruf nach Neustart, nach dem Private-Key-Passphrase gefragt wird. Es speichert die Umgebungsvariablen, die bei einer Public-Private-Key Authentifizierung notwendig sind in die Datei fachkatalog/etc/env ab.

